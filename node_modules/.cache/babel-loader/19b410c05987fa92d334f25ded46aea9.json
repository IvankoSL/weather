{"ast":null,"code":"var _jsxFileName = \"/Users/ivanko/Documents/beetroot/weather/src/App.js\";\nimport React from 'react';\nimport Header from './components/header';\nimport Main from './components/main';\nimport Footer from './components/footer';\nconst API_KEY = \"4a0305f84b2295c6592facd17f703e29\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      pressure: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n        const data = await api_url.json();\n        let sunset = data.sys.sunset;\n        let date = new Date();\n        date.setTime(sunset);\n        let sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          pressure: data.main.pressure,\n          sunset: sunset_date,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          pressure: undefined,\n          sunset: undefined,\n          error: \"Введите название города\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5 info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-7 form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Main, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      pressure: this.state.pressure,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ivanko/Documents/beetroot/weather/src/App.js"],"names":["React","Header","Main","Footer","API_KEY","App","Component","state","temp","undefined","city","country","pressure","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './components/header'\nimport Main from './components/main'\nimport Footer from './components/footer'\n\nconst API_KEY = \"4a0305f84b2295c6592facd17f703e29\";\n\nclass App extends React.Component {\n\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    pressure: undefined,\n    sunset: undefined,\n    error: undefined\n    \n  }\n\n  gettingWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    \n    \n    if(city){\n      \n      const api_url = await \n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n\n      let sunset = data.sys.sunset;\n      let date = new Date();\n      date.setTime(sunset);\n      let sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n\n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        pressure: data.main.pressure,\n        sunset: sunset_date,\n        error: \"\"\n      });\n    }else{\n      this.setState({\n        temp: undefined,\n    city: undefined,\n    country: undefined,\n    pressure: undefined,\n    sunset: undefined,\n    error: \"Введите название города\"\n      });\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"wrapper\">\n        <div className=\"main\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-5 info\">\n                <Header/>\n              </div>\n              <div className=\"col-sm-7 form\">\n                <Main weatherMethod={this.gettingWeather} />\n                <Footer \n                temp={this.state.temp}\n                city={this.state.city}\n                country={this.state.country}\n                pressure={this.state.pressure}\n                sunset={this.state.sunset}\n                error={this.state.error}\n                />\n              </div>\n            </div>\n          </div>\n        </div>       \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}